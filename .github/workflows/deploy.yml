name: Launch Game - Minecraft Server

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Initialize & Setup Game Server
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
      TF_VAR_key_pair_name: ${{ secrets.KEY_PAIR_NAME }}

    steps:
      - name: Clone Codebase
        uses: actions/checkout@v4

      - name: Configure Terraform Infrastructure
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Initialize Terraform Infrastructure
        working-directory: ./terraform_dir
        run: terraform init

      - name: Execute Terraform (auto-approve)
        working-directory: ./terraform_dir
        run: terraform apply -auto-approve

      - name: Extract server address (pub IP)
        working-directory: ./terraform_dir
        id: get_ip
        run: echo "INSTANCE_IP=$(terraform output -raw instance_ip)" >> "$GITHUB_ENV"

      - name: Install Ansible
        run: sudo apt update && sudo apt install -y ansible

      - name: Add private SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Generate Server Connection File
        run: |
          echo "[minecraft]" > ansible_dir/inventory.ini
          echo "$INSTANCE_IP ansible_user=ubuntu ansible_ssh_private_key_file=~/.ssh/id_rsa ansible_ssh_common_args='-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'" >> ansible_dir/inventory.ini

      - name: Run Ansible playbook
        run: ansible-playbook -i ansible_dir/inventory.ini ansible_dir/playbook.yml